function [eigvalues, eigvectors, iter] = CoordinateDescent_triofm_par(A, k, gamma, nonzerocols, itermax, V, w, alpha, th)
    [N,~] = size(A);
    K = V'*V;
    r = zeros(1,k);
    K0 = K;
    V0 = V;
    iter = 1;
    dU = zeros(N,k);
    AV0 = A*V0;
    %G = zeros(k,k,N);
    %dr = zeros(N,k);
    idx = [1:N];
    for iter = 1:itermax
        sub1 = sort(randsample(N, floor(N*th)));
        sub2 = sort(setdiff(idx, sub1));
        N1 = length(sub1);
        N2 = length(sub2);
        G = zeros(k,k,N2);
        dr = zeros(N2,k);
        V1 = zeros(N2,k);
        parfor k = 1:N2
            j = sub2(k);
            % j = mod(iter-1, N) + 1;
            %cj = nonzerocols{j};
            %U = -gamma*4*(A(j, cj)*V0(cj,:) + V0(j,:)*((1-w)*triu(K0) + w*K0));
            U = -gamma*4*(AV0(j,:) + V0(j,:)*((1-w)*triu(K0) + w*K0));
            G(:,:,k) = (V0(j,:))'*U + U'*V0(j,:) + U'*U;
            V1(k,:) = V(j,:) + U + alpha*dU(j,:);
            %r = r + V(j,:).^2;
            %K = K + G;
            dr(k,:) = V(j,:).^2;
            dU1(k,:) = U;
        end
        V(sub2,:) = V(sub2,:) + V1;
        dU(sub2,:) = dU1;
        K = K + sum(G,3);
        r = r + sum(dr,1);
        G = zeros(k,k,N1);
        dr = zeros(N1,k);
        parfor k = 1:N1
            j = sub1(k);
            U = -gamma*4*(AV0(j,:) + V0(j,:)*((1-w)*triu(K) + w*K));
            G(:,:,k) = (V0(j,:))'*U + U'*V0(j,:) + U'*U;
            V2(k,:) = V(j,:) + U + alpha*dU(j,:);
            %r = r + V(j,:).^2;
            %K = K + G;
            dr(k,:) = V(j,:).^2;
            dU2(k,:) = U;
        end
        V(sub1,:) = V(sub1,:) + V1;
        dU(sub1,:) = dU1;
        K = K + sum(G,3);
        r = r + sum(dr,1);
        Dinv = diag(1./sqrt(r));
        K = Dinv*K*Dinv;
        K0 = K;
        V = V*Dinv;
        V0 = V;
        AV0 = A*V0;
        r = zeros(1,k);
    end
    [V,~] = qr(V,0);
    H = V'*A*V;
    [Q, D] = eig(H);
    eigvectors = V*Q;
    eigvalues = diag(D);
end
